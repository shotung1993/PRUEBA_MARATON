buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
		classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
    }
}

allprojects {
	
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 11
    targetCompatibility = 11

    repositories {
        mavenCentral()
        maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/lacafetalab/java-base-ddd")
            credentials {
                username = "walterjabo"//project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                password = "1d1051418618ea8d6d9b91a053e71f10b1435ae7"//project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
    	}
    }

    sourceSets {
        main {
            java { srcDirs = [ 'main' ] }
            resources { srcDir 'resources' }
        }
        test {
            java { srcDirs = [ 'test' ] }
        }
    }

    task hello {
        doLast { task ->
            println "I'm $task.project.name"
        }
    }
    
    dependencies {
    	implementation 'pe.lacafetalab:base-ddd:0.0.26'
    
    	// Test
    	testCompile 'org.springframework.boot:spring-boot-starter-test:2.1.6.RELEASE'
        testCompile 'org.mockito:mockito-core:2.+'
        testCompile 'org.junit.jupiter:junit-jupiter-api:5.+'
        testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.+'
    }
}

subprojects {

	apply plugin: 'jacoco'

    group = "pe.lacafetalab.${rootProject.name}"

    dependencies {
        // Prod
        
        compile 'org.springframework.boot:spring-boot-starter-webflux:2.2.6.RELEASE'
        compile 'org.springframework.data:spring-data-jpa:2.1.9.RELEASE'
        compile 'javax.persistence:javax.persistence-api:2.2'
		compile 'javax.transaction:javax.transaction-api:1.3'
		
		compile 'org.hibernate:hibernate-core:5.4.4.Final'
		compile 'com.vladmihalcea:hibernate-types-52:2.5.0'
        
        compile 'io.projectreactor:reactor-bus:2.0.8.RELEASE'
        compile 'io.projectreactor:reactor-core:3.3.5.RELEASE'
        
		compile 'javax.persistence:persistence-api:1.0.2'
		
        compileOnly 'org.projectlombok:lombok:1.18.8'
		annotationProcessor 'org.projectlombok:lombok:1.18.8'
		
		compile 'org.apache.commons:commons-lang3:3.9'
		compile 'org.apache.logging.log4j:log4j-core:2.12.0'
    }

    test {
        useJUnitPlatform()

        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat "full"
            
            debug {
	            events "started", "skipped", "failed"
	            exceptionFormat "full"
	        }
        }

        reports {
            html.enabled = true
        }
    }
    
    jacoco {
	    toolVersion = "0.8.4"
	    reportsDir = file("$buildDir/customJacocoReportDir")
	}
	
	jacocoTestReport {
	    reports {
	        xml.enabled false
	        csv.enabled false
	        html.destination file("${buildDir}/jacocoHtml")
	    }
	    
	    //afterEvaluate {
	    //    classDirectories = files(classDirectories.files.collect {
	    //    	fileTree(dir: it, exclude: [
		//			'**/*repository**'
	    //        ])
	    //    })
	    //}
	}
	
	jacocoTestCoverageVerification {
	    violationRules {
	        rule {
	            limit {
	                minimum = 0.00
	            }
	        }
	    }
	}
	check.dependsOn jacocoTestCoverageVerification
}